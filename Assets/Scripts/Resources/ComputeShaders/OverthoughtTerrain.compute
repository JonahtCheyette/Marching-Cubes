#pragma kernel Generate
#include "/Includes/Noise.compute"
#include "/Includes/Basics.compute"

float4 octaveOffsets[8];
float4 terrainOffsets[8];
float noiseStrength;
float scale;
int octaves;
float persistance;
float lacunarity;
float heightScale;
float floorHeight;
float floorStrength;
float tScale;
int tOctaves;
float tPersistance;
float tLacunarity;
bool useTerracing;
float terraceHeight;

[numthreads(4,4,2)]
void Generate (uint3 id : SV_DispatchThreadID) {
    if (id.x >= sizeX || id.y >= sizeY || id.z >= sizeZ) {
        return;
    }

    float3 halfSize = float3((float)(sizeX - 1), (float)(sizeY - 1), (float)(sizeZ - 1)) / 2;
    float3 pos = (float3(id.x, id.y, id.z) - halfSize) * gridSize + center.xyz;

    float noiseValue = 0;
    float terrainValue = 0;

    float frequency = 1;
    float amplitude = 1;

    for (int i = 0; i < octaves; i++) {
        //getting the sample positon
        float3 samplePos = octaveOffsets[i].xyz + ((frequency * pos) / scale);

        //getting the noise value
        noiseValue += snoise(samplePos) * amplitude;

        //dealing with octaves
        amplitude *= persistance;
        frequency *= lacunarity;
    }

    frequency = 1;
    amplitude = 1;

    for (int j = 0; j < tOctaves; j++) {
        //getting the sample positon
        float2 terrainPos = terrainOffsets[j].xz + ((frequency * pos.xz) / tScale);

        float noise = snoise(float3(terrainPos.x, 0, terrainPos.y));

        //getting the noise value
        //we cube the noise value in order to get a nice curve, so we have actual beaches, without using an animationCurve.
        terrainValue += (noise * noise * noise) * amplitude * heightScale;

        //dealing with octaves
        amplitude *= tPersistance;
        frequency *= tLacunarity;
    }

    float value = (noiseStrength * noiseValue) + ((1 - noiseStrength) * (terrainValue - pos.y));

    if (pos.y < floorHeight) {
        value += floorStrength;
    }

    if (useTerracing) {
        value += pos.y % terraceHeight;
    }
    
    points[indexFromCoord(id.x, id.y, id.z)] = float4(pos, value);
}
